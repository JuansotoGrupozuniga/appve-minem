--------------------------------------------------------
-- Archivo creado  - martes-febrero-16-2021   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Package Body PKG_ELECTROMOV_CALCULO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "ELECTROMOVILIDAD"."PKG_ELECTROMOV_CALCULO" AS

  PROCEDURE USP_SEL_LIST_TIPO_COMBUS(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_TIPO_COMBUSTIBLE
    ORDER BY ID_TIPO_COMBUSTIBLE;
  END USP_SEL_LIST_TIPO_COMBUS;

  PROCEDURE USP_SEL_LIST_TIPO_TRANSP(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_TIPO_TRANSPORTE
    ORDER BY ID_TIPO_TRANSPORTE;
  END USP_SEL_LIST_TIPO_TRANSP;
  
  PROCEDURE USP_SEL_LIST_TIPO_VEH_CONV(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_TIPO_VEHICULO_CONV
    ORDER BY ID_TIPO_VEHICULO_CONV;
  END USP_SEL_LIST_TIPO_VEH_CONV;
  
  PROCEDURE USP_SEL_LIST_TIPO_VEH_ELEC(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_TIPO_VEHICULO_ELEC
    ORDER BY ID_TIPO_VEHICULO_ELEC;
  END USP_SEL_LIST_TIPO_VEH_ELEC;
  
  PROCEDURE USP_SEL_GET_FORMULA(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_FORMULA
    WHERE ID_CASO = PI_ID_CASO;
  END USP_SEL_GET_FORMULA;
  
  PROCEDURE USP_SEL_FACTOR_PARAMETRO(
    PI_ID_FACTOR NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )
  AS
  BEGIN
        OPEN PO_REF FOR
        SELECT  FP.*,
                (SELECT COUNT(1)
                FROM    T_MAE_FACTOR_PARAMETRO FP
                WHERE   FP.ID_FACTOR = PI_ID_FACTOR
                        AND FP.ID_PARAMETRO IS NOT NULL) NUMERO_PARAMETROS
        FROM    T_MAE_FACTOR F,
                T_MAE_FACTOR_PARAMETRO FP
        WHERE   F.ID_FACTOR = PI_ID_FACTOR
                AND F.ID_FACTOR = FP.ID_FACTOR
                AND FP.ID_PARAMETRO IS NOT NULL
                AND FP.FLAG_ESTADO = '1'
        ORDER BY FP.ORDEN;
  END USP_SEL_FACTOR_PARAMETRO;
  
  PROCEDURE USP_SEL_FACTOR_VALOR(
    PI_ID_FACTOR NUMBER,
    PI_SQL_WHERE VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  )
  AS
    V_SQL VARCHAR2(4000);
  BEGIN
    V_SQL := 'SELECT  *
            FROM    T_MAE_FACTOR_DATA F
            WHERE   F.ID_FACTOR = ' || TO_CHAR(PI_ID_FACTOR) || ' ';
    V_SQL := V_SQL || PI_SQL_WHERE;

    OPEN PO_REF FOR V_SQL;
  END USP_SEL_FACTOR_VALOR;
  
  PROCEDURE USP_MAN_GUARDA_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PI_RUC VARCHAR2,
    PI_RAZON_SOCIAL VARCHAR2,
    PI_CORREO VARCHAR2,
    PI_TELEFONO VARCHAR2,
    PI_DIRECCION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PI_ID_GET OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN    
    IF PI_ID_INSTITUCION = -1 THEN
      PI_ID_GET := SQ_GENM_INSTITUCION.NEXTVAL();
      INSERT INTO T_GENM_INSTITUCION (ID_INSTITUCION, RUC, RAZON_SOCIAL, CORREO, TELEFONO, DIRECCION, ID_USUARIO, REG_USUARIO, REG_FECHA)
      VALUES (PI_ID_GET, PI_RUC, PI_RAZON_SOCIAL, PI_CORREO, PI_TELEFONO, PI_DIRECCION, PI_UPD_USUARIO, PI_UPD_USUARIO, SYSDATE);
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_MAN_GUARDA_INSTITUCION;
  
  PROCEDURE USP_SEL_LISTA_FACTOR_1P(
    PI_ID_FACTOR NUMBER,
    PI_ID_P1 NUMBER,
    PI_V_P1 NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_MAE_FACTOR_DATA F
    WHERE   F.ID_FACTOR = PI_ID_FACTOR AND F.PARAMETROS = PI_ID_P1 AND F.VALORES = PI_V_P1;
  END USP_SEL_LISTA_FACTOR_1P;
  
  PROCEDURE USP_SEL_LISTA_FACTOR_2P(
    PI_ID_FACTOR NUMBER,
    PI_ID_P1 NUMBER,
    PI_ID_P2 NUMBER,
    PI_V_P1 NUMBER,
    PI_V_P2 NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_MAE_FACTOR_DATA F
    WHERE   F.ID_FACTOR = PI_ID_FACTOR AND F.PARAMETROS = PI_ID_P1 || '|' || PI_ID_P2 AND F.VALORES = PI_V_P1 || '|' || PI_V_P2;
  END USP_SEL_LISTA_FACTOR_2P;
  
  PROCEDURE USP_SEL_LISTA_FACTOR_3P(
    PI_ID_FACTOR NUMBER,
    PI_ID_P1 NUMBER,
    PI_ID_P2 NUMBER,
    PI_ID_P3 NUMBER,
    PI_V_P1 NUMBER,
    PI_V_P2 NUMBER,
    PI_V_P3 NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_MAE_FACTOR_DATA F
    WHERE   F.ID_FACTOR = PI_ID_FACTOR AND F.PARAMETROS = PI_ID_P1 || '|' || PI_ID_P2 || '|' || PI_ID_P3 AND F.VALORES = PI_V_P1 || '|' || PI_V_P2 || '|' || PI_V_P3;
  END USP_SEL_LISTA_FACTOR_3P;
  
  PROCEDURE USP_SEL_LIST_MODELO_VEH(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_MODELO_VEHICULO_ELEC
    ORDER BY ID_MODELO;
  END USP_SEL_LIST_MODELO_VEH;
  
  PROCEDURE USP_SEL_LIST_TIPO_CARGADOR(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_TIPO_CARGADOR
    ORDER BY ID_CARGADOR;
  END USP_SEL_LIST_TIPO_CARGADOR;
  
  PROCEDURE USP_SEL_LIST_CARGADOR_POTENC(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_CARGADOR_POTENCIA
    ORDER BY ID_POTENCIA;
  END USP_SEL_LIST_CARGADOR_POTENC;
  
  PROCEDURE USP_SEL_LIST_DEPARTAMENTO(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_MAE_DEPARTAMENTO
    ORDER BY ID_DEPARTAMENTO;
  END USP_SEL_LIST_DEPARTAMENTO;

END PKG_ELECTROMOV_CALCULO;

/
